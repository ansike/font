<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fd.font.cloud.developer.dao.FontDownloadLogMapper">
  <resultMap id="BaseResultMap" type="com.fd.font.cloud.developer.entity.FontDownloadLog">
    <id column="download_id" jdbcType="INTEGER" property="downloadId" />
    <result column="app_key" jdbcType="VARCHAR" property="appKey" />
    <result column="app_id" jdbcType="INTEGER" property="appId" />
    <result column="partner_user_id" jdbcType="VARCHAR" property="partnerUserId" />
    <result column="font_code" jdbcType="VARCHAR" property="fontCode" />
    <result column="font_id" jdbcType="INTEGER" property="fontId" />
    <result column="font_version_id" jdbcType="INTEGER" property="fontVersionId" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    download_id, app_key, app_id, partner_user_id, font_code, font_id, font_version_id, 
    create_by, create_time, update_by, update_time, is_deleted
  </sql>
  <select id="selectByExample" parameterType="com.fd.font.cloud.developer.entity.FontDownloadLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_font_download_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_font_download_log
    where download_id = #{downloadId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_font_download_log
    where download_id = #{downloadId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fd.font.cloud.developer.entity.FontDownloadLogExample">
    delete from t_font_download_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fd.font.cloud.developer.entity.FontDownloadLog">
    insert into t_font_download_log (download_id, app_key, app_id, 
      partner_user_id, font_code, font_id, 
      font_version_id, create_by, create_time, 
      update_by, update_time, is_deleted
      )
    values (#{downloadId,jdbcType=INTEGER}, #{appKey,jdbcType=VARCHAR}, #{appId,jdbcType=INTEGER}, 
      #{partnerUserId,jdbcType=VARCHAR}, #{fontCode,jdbcType=VARCHAR}, #{fontId,jdbcType=INTEGER}, 
      #{fontVersionId,jdbcType=INTEGER}, #{createBy,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fd.font.cloud.developer.entity.FontDownloadLog">
    insert into t_font_download_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="downloadId != null">
        download_id,
      </if>
      <if test="appKey != null">
        app_key,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="partnerUserId != null">
        partner_user_id,
      </if>
      <if test="fontCode != null">
        font_code,
      </if>
      <if test="fontId != null">
        font_id,
      </if>
      <if test="fontVersionId != null">
        font_version_id,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="downloadId != null">
        #{downloadId,jdbcType=INTEGER},
      </if>
      <if test="appKey != null">
        #{appKey,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=INTEGER},
      </if>
      <if test="partnerUserId != null">
        #{partnerUserId,jdbcType=VARCHAR},
      </if>
      <if test="fontCode != null">
        #{fontCode,jdbcType=VARCHAR},
      </if>
      <if test="fontId != null">
        #{fontId,jdbcType=INTEGER},
      </if>
      <if test="fontVersionId != null">
        #{fontVersionId,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fd.font.cloud.developer.entity.FontDownloadLogExample" resultType="java.lang.Long">
    select count(*) from t_font_download_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_font_download_log
    <set>
      <if test="record.downloadId != null">
        download_id = #{record.downloadId,jdbcType=INTEGER},
      </if>
      <if test="record.appKey != null">
        app_key = #{record.appKey,jdbcType=VARCHAR},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=INTEGER},
      </if>
      <if test="record.partnerUserId != null">
        partner_user_id = #{record.partnerUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.fontCode != null">
        font_code = #{record.fontCode,jdbcType=VARCHAR},
      </if>
      <if test="record.fontId != null">
        font_id = #{record.fontId,jdbcType=INTEGER},
      </if>
      <if test="record.fontVersionId != null">
        font_version_id = #{record.fontVersionId,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_font_download_log
    set download_id = #{record.downloadId,jdbcType=INTEGER},
      app_key = #{record.appKey,jdbcType=VARCHAR},
      app_id = #{record.appId,jdbcType=INTEGER},
      partner_user_id = #{record.partnerUserId,jdbcType=VARCHAR},
      font_code = #{record.fontCode,jdbcType=VARCHAR},
      font_id = #{record.fontId,jdbcType=INTEGER},
      font_version_id = #{record.fontVersionId,jdbcType=INTEGER},
      create_by = #{record.createBy,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fd.font.cloud.developer.entity.FontDownloadLog">
    update t_font_download_log
    <set>
      <if test="appKey != null">
        app_key = #{appKey,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=INTEGER},
      </if>
      <if test="partnerUserId != null">
        partner_user_id = #{partnerUserId,jdbcType=VARCHAR},
      </if>
      <if test="fontCode != null">
        font_code = #{fontCode,jdbcType=VARCHAR},
      </if>
      <if test="fontId != null">
        font_id = #{fontId,jdbcType=INTEGER},
      </if>
      <if test="fontVersionId != null">
        font_version_id = #{fontVersionId,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
    </set>
    where download_id = #{downloadId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fd.font.cloud.developer.entity.FontDownloadLog">
    update t_font_download_log
    set app_key = #{appKey,jdbcType=VARCHAR},
      app_id = #{appId,jdbcType=INTEGER},
      partner_user_id = #{partnerUserId,jdbcType=VARCHAR},
      font_code = #{fontCode,jdbcType=VARCHAR},
      font_id = #{fontId,jdbcType=INTEGER},
      font_version_id = #{fontVersionId,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=TINYINT}
    where download_id = #{downloadId,jdbcType=INTEGER}
  </update>
</mapper>